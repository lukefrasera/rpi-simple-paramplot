+--------------------------------------------+
| 3D Parametric Plotter for the Raspberry Pi |
+--------------------------------------------+

0. Overview
1. Compilation
2. Usage


0. Overview
===========

Surfaces in three-dimensional space can be described by a function which maps
values from a two-dimensional plane (u,v-coordinates) into 3D space (x,y,z).

Playing around with these functions can be fun and you can get some very pretty
surfaces with relatively concise formulas.

I wrote this program as a tool to play around with these, but also as an
exercise in OpenGL ES and parsing of mathematical expressions.

Also, I find it extraordinarily awesome that the Raspberry Pi can do this.


1. Compilation
==============

The program depends on GL, GLM and SDL, so make sure you have those installed
on your system before proceeding.  On Raspbian, this command should do it:
    $ sudo apt-get install libglm-dev libsdl1.2-dev

If you have everything, executing the following should compile the program:
    $ make


2. Usage
========

The output of
    $ ./rpi-simple-paramplot -h
shows the following:

Usage: ./rpi-simple-paramplot [options]
Options:
 -e <vardef>
   Define an auxiliary variable which can be used in following occurrences
   of -e, -x, -y and -z.  The definition may use u and v.  The option argument
   must be of the form "<varchar>=<definition>" with the '=' sign exactly at
   the second position (no whitespace before it!)
 -x <xdef>, -y <ydef>, -z <zdef>
   Specify the parametric function to plot.  u, v and user-defined variables
   may be used.
 -r <rdef>, -g <gdef>, -b <bdef>
   Specify the color of the surface.  u, v and user-defined variables
   may be used.
 -u <u_res>, -v <v_res>
   Set the number of sampling points along the u and v coordinates.
   The default is 64, 64.
Examples:
 Sphere:
   ./rpi-simple-paramplot -e "U=2*pi*u" -e "V=pi*v" \
     -x "cos(U) * sin(V)" -z "sin(U) * sin(V)" -y "cos(V)";

When the program is running, you can use the following keys and buttons:
    Drag Left Mouse Button:           Rotate view.
    Drag Left+Right Mouse Button:     Roll view.
    Draw Middle Mouse Button Up/Down: Move view forward/backward.
    Escape: Quit program.
    F1:     Print keybindings.
    F2:     Toggle vertical synchronization.
    F3:     Toggle backface culling (can be used to
            enhance performance, but only with closed surfaces).


Have fun math-ing on your Raspberry Pi!
  - Benedek Vartok  <vartokb@ethz.ch>
